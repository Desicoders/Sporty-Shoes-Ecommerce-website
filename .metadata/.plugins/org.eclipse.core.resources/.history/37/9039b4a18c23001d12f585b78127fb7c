package com.sporty.shoes.security;

import java.util.Collection;
import java.util.List;
import java.util.stream.Collectors;

import org.springframework.security.core.GrantedAuthority;
import org.springframework.security.core.authority.SimpleGrantedAuthority;
import org.springframework.security.core.userdetails.UserDetails;

import com.sporty.shoes.enteties.Users;

public class UserDetailsImpl implements UserDetails{

	private Long id;
	
	private String username;
	
	private String email;
	
	private String password;
	
	private Collection<? extends GrantedAuthority> authorities;
	
	public UserDetailsImpl(int id2, String name, String email2, String password, List<GrantedAuthority> authorities2) {
		this.id=id;
		this.username=name;
		this.email=email2;
		this.password=password;
		this.authorities=authorities;
	}

	@Override
	public Collection<? extends GrantedAuthority> getAuthorities() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public String getPassword() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public String getUsername() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public boolean isAccountNonExpired() {
		// TODO Auto-generated method stub
		return false;
	}

	@Override
	public boolean isAccountNonLocked() {
		// TODO Auto-generated method stub
		return false;
	}

	@Override
	public boolean isCredentialsNonExpired() {
		// TODO Auto-generated method stub
		return false;
	}

	@Override
	public boolean isEnabled() {
		// TODO Auto-generated method stub
		return false;
	}
	
	public static UserDetailsImpl build(Users user) {
		List<GrantedAuthority> authorities=user.getRoles().stream()
				.map(role->new SimpleGrantedAuthority(role.getName().name()))
				.collect(Collectors.toList());
		
			return new UserDetailsImpl(
					user.getId(),
					user.getName(),
					user.getEmail(),
					user.getPassword(),
					authorities
					);
				
	}

}
