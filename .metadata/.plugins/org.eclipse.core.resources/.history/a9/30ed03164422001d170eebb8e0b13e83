package com.sporty.shoes.service;

import java.lang.reflect.Field;
import java.util.List;

import javax.persistence.criteria.Order;
import javax.transaction.Transactional;

import org.apache.el.util.ReflectionUtil;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.util.ReflectionUtils;

import com.sporty.shoes.Repositry.OrderRepo;
import com.sporty.shoes.enteties.Orders;
import com.sporty.shoes.exceptions.OrderNotFoundException;

@org.springframework.stereotype.Service
@Transactional
public class OrderServiceImpl implements Service<Orders>{
	
	@Autowired
	OrderRepo orderRepo;

	@Override
	public List<Orders> getAll() {
		return orderRepo.findAll();
	}

	@Override
	public Orders get(int id) {
		return orderRepo.findById(id).orElseThrow(() -> new OrderNotFoundException("No order with id = "+id));
	}

	@Override
	public void delete(int id) {
		orderRepo.deleteById(id);
		
	}

	@Override
	public Orders update(int id, String fieldname, Object FieldValue) {

		Orders orders=get(id);
		Field field=ReflectionUtils.findField(Order.class, fieldname);
		field.setAccessible(true);
		ReflectionUtils.setField(field, orders, FieldValue);
		return orders;
	}

	@Override
	public Orders save(Orders obj) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Orders update(int id, String fieldname, Object FieldValue) {
		// TODO Auto-generated method stub
		return null;
	}

}
